/*
 * @Author: chenq
 * @Date: 2020-11-01 10:19:45
 * @LastEditTime: 2020-11-01 10:33:11
 * @Descripttion: 计算正数跟负数左移右移的结果，数计算机中都是以补码存在，左移右移都是操作补码，正数的反码补码都是本身。负数的反码：符号位不变，其他按位取反；负数补码：反码+1
 */
#include <iostream>
using namespace std;

int main()
{
    int a = 6;                      //6,  0000 0110
    cout<<"a:"<<a<<endl;
    cout<<"a>>1:"<<(a>>1)<<endl;    //3,  0000 0011 正数右移：高位补0
    cout<<"a<<1:"<<(a<<1)<<endl;    //12, 0000 1100 正数左移：低位补0

    int b = -6;                     //-6, 1000 0110  补: 1111 1010
    cout<<"b:"<<b<<endl;
    cout<<"b>>1:"<<(b>>1)<<endl;    //补: 1111 1101  原: 1000 0011, -3
    cout<<"b<<1:"<<(b<<1)<<endl;    //补: 1111 0100  原: 1000 1100, -12
    return 0;
}
